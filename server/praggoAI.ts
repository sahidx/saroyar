import { GoogleGenAI } from "@google/genai";

// Praggo AI - 5 Hardcoded API Key Rotation System for VPS Production
// Automatic rotation on quota limits with instant fallback

class PraggoAIService {
  private static instance: PraggoAIService;
  
  // 5 HARDCODED GEMINI API KEYS - PRODUCTION READY
  private readonly API_KEYS = [
    "AIzaSyABdNCR_6wfhSOUJoGPWpSqUTWOGtbbBiQ", // Key 1 - Primary
    "ADD_YOUR_SECOND_KEY_HERE",                    // Key 2 - Backup
    "ADD_YOUR_THIRD_KEY_HERE",                     // Key 3 - Backup  
    "ADD_YOUR_FOURTH_KEY_HERE",                    // Key 4 - Backup
    "ADD_YOUR_FIFTH_KEY_HERE"                      // Key 5 - Backup
  ];
  
  private currentKeyIndex = 0;
  private readonly modelName = 'gemini-2.0-flash-exp';
  private readonly maxRetries = 5;

  private constructor() {
    this.initializeKeys();
  }

  static getInstance(): PraggoAIService {
    if (!PraggoAIService.instance) {
      PraggoAIService.instance = new PraggoAIService();
    }
    return PraggoAIService.instance;
  }

  private initializeKeys() {
    // Check if keys are properly configured
    const validKeys = this.API_KEYS.filter(key => 
      key && key.length > 30 && !key.includes('_HERE')
    );
    
    if (validKeys.length === 0) {
      console.warn('тЪая╕П Praggo AI: No valid API keys configured. Replace placeholder keys in API_KEYS array.');
    } else {
      console.log(`ЁЯОУ Praggo AI Enhanced System: ${validKeys.length}/5 keys active with rotation`);
      console.log('ЁЯУЪ NCTB Curriculum тАв University Admission тАв Bengali AI Support');
    }
  }

  private getCurrentKey(): string | null {
    const key = this.API_KEYS[this.currentKeyIndex];
    return (key && key.length > 30 && !key.includes('_HERE')) ? key : null;
  }

  private getClient(): GoogleGenAI | null {
    const key = this.getCurrentKey();
    if (!key) return null;
    return new GoogleGenAI({ apiKey: key });
  }

  private rotateToNextKey(): boolean {
    const oldIndex = this.currentKeyIndex;
    
    // Try to find next valid key
    for (let i = 1; i <= this.maxRetries; i++) {
      this.currentKeyIndex = (this.currentKeyIndex + 1) % this.API_KEYS.length;
      if (this.getCurrentKey()) {
        console.log(`ЁЯФД Praggo AI rotated: Key #${oldIndex + 1} тЖТ Key #${this.currentKeyIndex + 1}`);
        return true;
      }
    }
    
    console.warn('тЪая╕П All Praggo AI keys exhausted or invalid');
    return false;
  }

  private isQuotaError(error: any): boolean {
    const errorMessage = error?.message?.toLowerCase() || '';
    const errorStatus = error?.status || error?.code;
    
    return (
      errorMessage.includes('quota') ||
      errorMessage.includes('rate limit') ||
      errorMessage.includes('limit exceeded') ||
      errorMessage.includes('resource exhausted') ||
      errorStatus === 429 ||
      errorStatus === 403
    );
  }

  // Compatibility method - no longer needed but kept for existing code
  async refreshKeys() {
    this.initializeKeys();
  }

  // Main API call method with 5-key rotation and error handling
  async makeAPICall(
    prompt: string,
    userId: string,
    userRole: 'teacher' | 'student',
    requestType: 'generate_questions' | 'solve_doubt',
    subject: 'science' | 'math'
  ): Promise<string> {
    let attempt = 0;
    let lastError: any = null;

    while (attempt < this.maxRetries) {
      const genAI = this.getClient();
      if (!genAI) {
        throw new Error('Praggo AI ржПрж░ ржЬржирзНржп ржмрзИржз Gemini API key рж╕рзЗржЯ ржХрж░рж╛ рж╣ржпрж╝ржирж┐ред');
      }

      try {
        console.log(`ЁЯдЦ Praggo AI attempt ${attempt + 1}/${this.maxRetries} using Key #${this.currentKeyIndex + 1}`);
        
        const response = await genAI.models.generateContent({
          model: this.modelName,
          contents: [{ role: 'user', parts: [{ text: prompt }] }]
        });

        // Parse response from various possible formats
        const anyResp: any = response as any;
        let result: string = '';
        
        if (typeof anyResp.text === 'function') {
          result = anyResp.text();
        } else if (typeof anyResp.text === 'string') {
          result = anyResp.text;
        } else if (anyResp.candidates?.[0]?.content?.parts?.[0]?.text) {
          result = anyResp.candidates[0].content.parts[0].text;
        } else if (anyResp.output_text) {
          result = anyResp.output_text;
        } else {
          console.error('ЁЯЪи Unexpected Gemini API response structure:', JSON.stringify(anyResp, null, 2));
          throw new Error('Gemini API рж╕ржарж┐ржХ ржЯрзЗржХрзНрж╕ржЯ ржлрзЗрж░ржд ржжрзЗржпрж╝ржирж┐');
        }

        console.log(`тЬЕ Praggo AI Key #${this.currentKeyIndex + 1} successful`);
        return result;

      } catch (error: any) {
        lastError = error;
        console.log(`тЭМ Praggo AI Key #${this.currentKeyIndex + 1} failed:`, error.message);
        
        if (this.isQuotaError(error)) {
          console.log(`ЁЯФД Quota exceeded, rotating to next key...`);
          if (!this.rotateToNextKey()) {
            break; // No more keys available
          }
          attempt++;
          continue;
        } else {
          // Non-quota error, don't retry with other keys
          break;
        }
      }
    }

    // All keys exhausted or non-quota error
    let errorMessage = '';
    if (lastError?.message?.includes('exhausted') || attempt >= this.maxRetries) {
      errorMessage = 'ржЖржЬрзЗрж░ ржЬржирзНржп ржЖржкржирж╛рж░ Praggo AI ржмрзНржпржмрж╣рж╛рж░рзЗрж░ рж╕рзАржорж╛ рж╢рзЗрж╖! ржЖржЧрж╛ржорзАржХрж╛рж▓ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред';
    } else if (this.isQuotaError(lastError)) {
      errorMessage = 'Praggo AI ржПрж░ рж╕ржХрж▓ API key ржПрж░ рж╕рзАржорж╛ ржкрзВрж░рзНржг! ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржХрж┐ржЫрзБржХрзНрж╖ржг ржкрж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред';
    } else {
      errorMessage = lastError?.message || 'Praggo AI рж╕рзЗржмрж╛ржпрж╝ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред';
    }

    throw new Error(errorMessage);
  }

  // Get curriculum-specific instructions based on class level and subject
  private getCurriculumSpecificInstructions(classLevel: string, subject: string): string {
    // Class 6 curriculum instructions - STRICT SYLLABUS CONTROL
    if (classLevel === '6') {
      if (subject === 'science') {
        return `ЁЯФм **рж╖рж╖рзНржа рж╢рзНрж░рзЗржгрж┐рж░ ржмрж┐ржЬрзНржЮрж╛ржи ржЕржирзБрж╕ржирзНржзрж╛ржирзА ржкрж╛ржа - NCTB ржХрж╛рж░рж┐ржХрзБрж▓рж╛ржо рзирзжрзирзл:**
тЪая╕П **STRICT SYLLABUS WARNING: рж╢рзБржзрзБржорж╛рждрзНрж░ рзмрж╖рзНржа рж╢рзНрж░рзЗржгрж┐рж░ ржХрж╛рж░рж┐ржХрзБрж▓рж╛ржорзЗрж░ ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи**

**ржЕржзрзНржпрж╛ржпрж╝рж╕ржорзВрж╣ (NCTB рзмрж╖рзНржа рж╢рзНрж░рзЗржгрж┐):**
рзз. ржмрзИржЪрж┐рждрзНрж░рзНржпржоржпрж╝ ржЬрзАржмржЬржЧрзО - ржкрзНрж░рж╛ржгрзА ржУ ржЙржжрзНржнрж┐ржжрзЗрж░ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп
рзи. ржкрж░рж┐ржмрзЗрж╢ ржУ ржЬрзАржмржмрзИржЪрж┐рждрзНрж░рзНржп - ржкрж░рж┐ржмрзЗрж╢рзЗрж░ ржЙржкрж╛ржжрж╛ржи, ржмрж╛рж╕рзНрждрзБрждржирзНрждрзНрж░
рзй. ржЬрзАржмрзЗрж░ ржмрзГржжрзНржзрж┐ ржУ ржмржВрж╢ржмрзГржжрзНржзрж┐ - ржЬрзАржмржЪржХрзНрж░, ржмржВрж╢ржмрж┐рж╕рзНрждрж╛рж░
рзк. ржХрзГрж╖рж┐ ржУ ржЦрж╛ржжрзНржп ржЙрзОржкрж╛ржжржи - ржлрж╕рж▓, ржорж╛ржЯрж┐, рж╕рж╛рж░
рзл. ржмрж╛ржпрж╝рзБ ржУ ржкрж╛ржирж┐ - ржЧрзБржгрж╛ржЧрзБржг, ржжрзВрж╖ржг, рж╕ржВрж░ржХрзНрж╖ржг
рзм. ржЖржХрж╛рж╢ ржкрж░рж┐ржЪрж┐рждрж┐ - рж╕рзВрж░рзНржп, ржЪрж╛ржБржж, ржЧрзНрж░рж╣-ржиржХрзНрж╖рждрзНрж░

**ржирж┐рж╖рж┐ржжрзНржз ржмрж┐рж╖ржпрж╝ (рзмрж╖рзНржа рж╢рзНрж░рзЗржгрж┐рж░ ржмрж╛ржЗрж░рзЗ):**
тЭМ рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ рж╕ржорзАржХрж░ржг, ржЕржгрзБ-ржкрж░ржорж╛ржгрзБрж░ ржЬржЯрж┐рж▓ ржЧржаржи
тЭМ ржХрзЛрж╖рзЗрж░ ржЕржнрзНржпржирзНрждрж░рзАржг ржЕржЩрзНржЧрж╛ржгрзБ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд
тЭМ ржЬржЯрж┐рж▓ ржкржжрж╛рж░рзНржержмрж┐ржЬрзНржЮрж╛ржирзЗрж░ рж╕рзВрждрзНрж░ ржУ ржЧржгржирж╛`;
      } else {
        return `ЁЯУК **рж╖рж╖рзНржа рж╢рзНрж░рзЗржгрж┐рж░ ржЧржгрж┐ржд - NCTB ржХрж╛рж░рж┐ржХрзБрж▓рж╛ржо рзирзжрзирзл:**
тЪая╕П **STRICT SYLLABUS WARNING: рж╢рзБржзрзБржорж╛рждрзНрж░ рзмрж╖рзНржа рж╢рзНрж░рзЗржгрж┐рж░ ржЧржгрж┐ржд ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи**

**ржЕржзрзНржпрж╛ржпрж╝рж╕ржорзВрж╣ (NCTB рзмрж╖рзНржа рж╢рзНрж░рзЗржгрж┐):**
рзз. ржкрзНрж░рж╛ржХрзГрждрж┐ржХ рж╕ржВржЦрзНржпрж╛ - рж╕ржВржЦрзНржпрж╛рж░рзЗржЦрж╛, рждрзБрж▓ржирж╛, ржмрж┐ржирзНржпрж╛рж╕
рзи. ржнржЧрзНржирж╛ржВрж╢ - ржкрзНрж░ржХрж╛рж░, ржпрзЛржЧ-ржмрж┐ржпрж╝рзЛржЧ, ржЧрзБржг-ржнрж╛ржЧ
рзй. ржжрж╢ржорж┐ржХ ржнржЧрзНржирж╛ржВрж╢ - рж░рзВржкрж╛ржирзНрждрж░, ржЪрж╛рж░ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛
рзк. ржЕржирзБржкрж╛ржд ржУ рж╕ржорж╛ржирзБржкрж╛ржд - ржкрзНрж░рж╛ржержорж┐ржХ ржзрж╛рж░ржгрж╛
рзл. рж╢рждржХрж░рж╛ - ржкрзНрж░рж╛ржержорж┐ржХ рж╣рж┐рж╕рж╛ржм, ржжрзИржиржирзНржжрж┐ржи ржкрзНрж░ржпрж╝рзЛржЧ
рзм. ржЬрзНржпрж╛ржорж┐рждрж┐ - ржорзМрж▓рж┐ржХ ржЖржХрж╛рж░, ржкрж░рж┐ржорж╛ржкрзЗрж░ ржПржХржХ
рзн. ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи - рждржерзНржп рж╕ржВржЧрзНрж░рж╣, рж╕рж╛ржЬрж╛ржирзЛ

**ржирж┐рж╖рж┐ржжрзНржз ржмрж┐рж╖ржпрж╝ (рзмрж╖рзНржа рж╢рзНрж░рзЗржгрж┐рж░ ржмрж╛ржЗрж░рзЗ):**
тЭМ ржмрзАржЬржЧржгрж┐ржд, рж╕рзВржЪржХ, ржмрж░рзНржЧржорзВрж▓
тЭМ ржЬрзНржпрж╛ржорж┐рждрж┐ржХ ржкрзНрж░ржорж╛ржг, ржЙржкржкрж╛ржжрзНржп
тЭМ рждрзНрж░рж┐ржХрзЛржгржорж┐рждрж┐, рж╕рзНржерж╛ржирж╛ржЩрзНржХ ржЬрзНржпрж╛ржорж┐рждрж┐`;
      }
    }
    // Class 7 curriculum instructions - STRICT SYLLABUS CONTROL
    else if (classLevel === '7') {
      if (subject === 'science') {
        return `ЁЯФм **рж╕ржкрзНрждржо рж╢рзНрж░рзЗржгрж┐рж░ ржмрж┐ржЬрзНржЮрж╛ржи ржЕржирзБрж╕ржирзНржзрж╛ржирзА ржкрж╛ржа - NCTB ржХрж╛рж░рж┐ржХрзБрж▓рж╛ржо рзирзжрзирзл:**
тЪая╕П **STRICT SYLLABUS WARNING: рж╢рзБржзрзБржорж╛рждрзНрж░ рзнржо рж╢рзНрж░рзЗржгрж┐рж░ ржХрж╛рж░рж┐ржХрзБрж▓рж╛ржорзЗрж░ ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи**

**ржЕржзрзНржпрж╛ржпрж╝рж╕ржорзВрж╣ (NCTB рзнржо рж╢рзНрж░рзЗржгрж┐):**
рзз. ржЖржорж╛ржжрзЗрж░ ржкрж░рж┐ржмрзЗрж╢ - ржЬрзАржм ржУ ржЬржбрж╝ ржЙржкрж╛ржжрж╛ржирзЗрж░ ржорж┐ржерж╕рзНржХрзНрж░рж┐ржпрж╝рж╛
рзи. ржЬрзАржмрзЗрж░ ржкрж░рж┐ржЪрж┐рждрж┐ ржУ рж╢рзНрж░рзЗржгрж┐ржмрж┐ржирзНржпрж╛рж╕ - ржкрзНрж░рж╛ржержорж┐ржХ рж╢рзНрж░рзЗржгрж┐ржмрж┐ржнрж╛ржЧ
рзй. ржХрзЛрж╖ ржУ ржХрзЛрж╖рзЗрж░ ржЧржаржи - ржкрзНрж░рж╛ржержорж┐ржХ ржХрзЛрж╖ ржЧржаржи
рзк. ржЬрзАржмрзЗ ржкрзБрж╖рзНржЯрж┐ - ржЦрж╛ржжрзНржп ржЙржкрж╛ржжрж╛ржи, ржкрзБрж╖рзНржЯрж┐рж░ ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝рждрж╛
рзл. ржЬрзАржмрзЗ рж╢рзНржмрж╕ржи ржУ рж╕рзНржмрж╛рж╕рзНржерзНржп - рж╢рзНржмрж╕ржирждржирзНрждрзНрж░, рж░рзЛржЧржкрзНрж░рждрж┐рж░рзЛржз
рзм. ржкржжрж╛рж░рзНрже ржУ рждрж╛рж░ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп - ржХржарж┐ржи, рждрж░рж▓, ржмрж╛ржпрж╝ржмрзАржпрж╝
рзн. рж╢ржХрзНрждрж┐ ржУ ржкрж░рж┐ржмрж░рзНрждржи - ржЧрждрж┐, рждрж╛ржк, ржЖрж▓рзЛ, рж╢ржмрзНржж (ржкрзНрж░рж╛ржержорж┐ржХ)

**ржирж┐рж╖рж┐ржжрзНржз ржмрж┐рж╖ржпрж╝ (рзнржо рж╢рзНрж░рзЗржгрж┐рж░ ржмрж╛ржЗрж░рзЗ):**
тЭМ ржЬржЯрж┐рж▓ рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржмрж┐ржХрзНрж░рж┐ржпрж╝рж╛ ржУ рж╕ржорзАржХрж░ржг
тЭМ ржХрзЛрж╖рзЗрж░ ржЕржнрзНржпржирзНрждрж░рзАржг ржЕржЩрзНржЧрж╛ржгрзБрж░ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд
тЭМ ржЙржирзНржиржд ржкржжрж╛рж░рзНржержмрж┐ржЬрзНржЮрж╛ржирзЗрж░ рж╕рзВрждрзНрж░ ржУ ржЧржгржирж╛`;
      } else {
        return `ЁЯУК **рж╕ржкрзНрждржо рж╢рзНрж░рзЗржгрж┐рж░ ржЧржгрж┐ржд - NCTB ржХрж╛рж░рж┐ржХрзБрж▓рж╛ржо рзирзжрзирзл:**
тЪая╕П **STRICT SYLLABUS WARNING: рж╢рзБржзрзБржорж╛рждрзНрж░ рзнржо рж╢рзНрж░рзЗржгрж┐рж░ ржЧржгрж┐ржд ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи**

**ржЕржзрзНржпрж╛ржпрж╝рж╕ржорзВрж╣ (NCTB рзнржо рж╢рзНрж░рзЗржгрж┐):**
рзз. ржорзВрж▓ржж рж╕ржВржЦрзНржпрж╛ - ржзржирж╛рждрзНржоржХ ржУ ржЛржгрж╛рждрзНржоржХ рж╕ржВржЦрзНржпрж╛
рзи. ржнржЧрзНржирж╛ржВрж╢ - ржорж┐рж╢рзНрж░ ржнржЧрзНржирж╛ржВрж╢, ржЙржирзНржиржд ржЪрж╛рж░ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛
рзй. ржжрж╢ржорж┐ржХ ржнржЧрзНржирж╛ржВрж╢ - ржкрзМржиржГржкрзБржирж┐ржХ ржжрж╢ржорж┐ржХ
рзк. рж╢рждржХрж░рж╛ - рж▓рж╛ржн-ржХрзНрж╖рждрж┐, рж╕рзБржжрзЗрж░ ржкрзНрж░рж╛ржержорж┐ржХ рж╣рж┐рж╕рж╛ржм
рзл. ржЕржирзБржкрж╛ржд ржУ рж╕ржорж╛ржирзБржкрж╛ржд - рж╕рж░рж▓ ржУ ржпрзМржЧрж┐ржХ ржЕржирзБржкрж╛ржд
рзм. ржмрзАржЬржЧржгрж┐ржд ржкрж░рж┐ржЪрж┐рждрж┐ - ржкрзНрж░рж╛ржержорж┐ржХ ржмрзАржЬржЧрж╛ржгрж┐рждрж┐ржХ рж░рж╛рж╢рж┐
рзн. ржЬрзНржпрж╛ржорж┐рждрж┐ - ржХрзЛржг, рждрзНрж░рж┐ржнрзБржЬ, ржЪрждрзБрж░рзНржнрзБржЬрзЗрж░ ржкрзНрж░рж╛ржержорж┐ржХ ржзрж╛рж░ржгрж╛
рзо. рждржерзНржп ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛ - ржЧржбрж╝, ржоржзрзНржпржХ (ржкрзНрж░рж╛ржержорж┐ржХ)

**ржирж┐рж╖рж┐ржжрзНржз ржмрж┐рж╖ржпрж╝ (рзнржо рж╢рзНрж░рзЗржгрж┐рж░ ржмрж╛ржЗрж░рзЗ):**
тЭМ рж╕рзВржЪржХ ржУ рж▓ржЧрж╛рж░рж┐ржжржо
тЭМ ржЬрзНржпрж╛ржорж┐рждрж┐ржХ ржкрзНрж░ржорж╛ржг ржУ ржЙржкржкрж╛ржжрзНржп
тЭМ рждрзНрж░рж┐ржХрзЛржгржорж┐рждрж┐, ржмрж░рзНржЧрж╕ржорзАржХрж░ржг`;
      }
    }
    // Class 8 curriculum instructions
    else if (classLevel === '8') {
      if (subject === 'science') {
        return `ЁЯФм **ржмрж┐ржЬрзНржЮрж╛ржи ржЕржирзБрж╕ржирзНржзрж╛ржирзА ржкрж╛ржа (Class ${classLevel}) - NCTB ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- ржкржжрж╛рж░рзНржержмрж┐ржЬрзНржЮрж╛ржи: ржЧрждрж┐, ржмрж▓, рж╕рж░рж▓ ржпржирзНрждрзНрж░, ржЖрж▓рзЛ, рждрж╛ржк ржУ рждрж╛ржкржорж╛рждрзНрж░рж╛
- рж░рж╕рж╛ржпрж╝ржи: ржкржжрж╛рж░рзНржерзЗрж░ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп, ржорж┐рж╢рзНрж░ржг, ржЕржгрзБ-ржкрж░ржорж╛ржгрзБ, рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржкрж░рж┐ржмрж░рзНрждржи
- ржЬрзАржмржмрж┐ржЬрзНржЮрж╛ржи: ржЬрзАржмржЬржЧрзО, ржХрзЛрж╖, ржЙржжрзНржнрж┐ржж ржмрзИрж╢рж┐рж╖рзНржЯрзНржп, рж╕рж╛рж▓рзЛржХрж╕ржВрж╢рзНрж▓рзЗрж╖ржг, рж╕ржВржмрзЗржжрж┐ ржЕржЩрзНржЧ
- ржкрзГржерж┐ржмрзА ржУ ржкрж░рж┐ржмрзЗрж╢: ржкрзГржерж┐ржмрзАрж░ ржЙрзОржкрждрзНрждрж┐, ржкрж░рж┐ржмрзЗрж╢рзЗрж░ ржнрж╛рж░рж╕рж╛ржорзНржп, ржЦрж╛ржжрзНржп ржУ ржкрзБрж╖рзНржЯрж┐
- ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗрж░ ржЙржжрж╛рж╣рж░ржг (ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА ржкрзНрж░рзЗржХрзНрж╖рж╛ржкржЯ: ржХрзГрж╖рж┐, ржкрзНрж░ржХрзГрждрж┐, рж╕рзНржмрж╛рж╕рзНржерзНржп)
- рж╕рж╣ржЬ ржнрж╛рж╖рж╛ржпрж╝ ржмрзИржЬрзНржЮрж╛ржирж┐ржХ ржмрзНржпрж╛ржЦрзНржпрж╛ ржУ ржкрж░рзАржХрзНрж╖рж╛-ржирж┐рж░рзАржХрзНрж╖рж╛`;
      } else {
        return `ЁЯУК **ржЧржгрж┐ржд (Class ${classLevel}) - NCTB ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- рж╕ржВржЦрзНржпрж╛ ржкржжрзНржзрждрж┐: ржкрзНрж░рж╛ржХрзГрждрж┐ржХ рж╕ржВржЦрзНржпрж╛, ржнржЧрзНржирж╛ржВрж╢, ржжрж╢ржорж┐ржХ
- ржкрзНрж░рж╛ржержорж┐ржХ ржмрзАржЬржЧржгрж┐ржд: рж╕рж░рж▓ рж╕ржорзАржХрж░ржг, ржмрзАржЬржЧрж╛ржгрж┐рждрж┐ржХ рж░рж╛рж╢рж┐
- ржЬрзНржпрж╛ржорж┐рждрж┐: ржорзМрж▓рж┐ржХ ржЖржХрж╛рж░, ржкрж░рж┐ржорж╛ржк, ржХрзНрж╖рзЗрждрзНрж░ржлрж▓, ржЖржпрж╝рждржи
- ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи: рждржерзНржп рж╕ржВржЧрзНрж░рж╣, ржЙржкрж╕рзНржерж╛ржкржирж╛, ржЧржбрж╝ ржирж┐рж░рзНржгржпрж╝
- ржмрзНржпржмрж╣рж╛рж░рж┐ржХ ржЧржгрж┐ржд: ржЕржирзБржкрж╛ржд, рж╕ржорж╛ржирзБржкрж╛ржд, рж╢рждржХрж░рж╛, рж╕рзБржж-ржЖрж╕рж▓
- ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ рж╕ржорж╛ржзрж╛ржи ржкржжрзНржзрждрж┐ ржУ ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗрж░ ржкрзНрж░ржпрж╝рзЛржЧ`;
      }
    }
    // Class 9-10 curriculum instructions  
    else if (classLevel === '9-10' || classLevel === '9' || classLevel === '10') {
      if (subject === 'science') {
        return `ЁЯФм **ржмрж┐ржЬрзНржЮрж╛ржи (рзпржо-рззрзжржо рж╢рзНрж░рзЗржгрж┐) - SSC NCTB ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- ржлрж┐ржЬрж┐ржХрзНрж╕: ржмрж▓ ржУ ржЧрждрж┐, ржХрж╛ржЬ рж╢ржХрзНрждрж┐ ржХрзНрж╖ржорждрж╛, рждрж╛ржк, ржЖрж▓рзЛ, рж╢ржмрзНржж, ржЪрзБржорзНржмржХрждрзНржм, рж╕рзНржерж┐рждрж┐рж╢рзАрж▓ рждржбрж╝рж┐рзО
- ржХрзЗржорж┐рж╕рзНржЯрзНрж░рж┐: ржкржжрж╛рж░рзНржерзЗрж░ ржЕржмрж╕рзНржерж╛, ржкрж░ржорж╛ржгрзБ, ржкрж░рзНржпрж╛ржпрж╝ рж╕рж╛рж░ржгрзА, ржЕржорзНрж▓-ржХрзНрж╖рж╛рж░, рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржмрж┐ржХрзНрж░рж┐ржпрж╝рж╛
- ржмрж╛ржпрж╝рзЛрж▓ржЬрж┐: ржЬрзАржмржХрзЛрж╖, ржЬрзАржмржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛, ржмржВрж╢ржЧрждрж┐, ржмрж┐ржмрж░рзНрждржи, ржорж╛ржиржм ржжрзЗрж╣рждрждрзНрждрзНржм
- SSC ржмрзЛрж░рзНржб ржкрж░рзАржХрзНрж╖рж╛рж░ рж╕рзНржЯрж╛ржЗрж▓ ржЕржирзБрж╕рж░ржг
- рж╕рзВрждрзНрж░ ржкрзНрж░ржпрж╝рзЛржЧ, ржЧржгржирж╛ ржУ рждрждрзНрждрзНржмрзАржпрж╝ ржмрзНржпрж╛ржЦрзНржпрж╛рж░ рж╕ржоржирзНржмржпрж╝`;
      } else if (subject === 'general_math') {
        return `ЁЯУК **рж╕рж╛ржзрж╛рж░ржг ржЧржгрж┐ржд (рзпржо-рззрзжржо рж╢рзНрж░рзЗржгрж┐) - SSC NCTB ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- ржмрж╛рж╕рзНрждржм рж╕ржВржЦрзНржпрж╛, рж╕рзЗржЯ ржУ ржлрж╛ржВрж╢ржи, ржмрзАржЬржЧрж╛ржгрж┐рждрж┐ржХ рж░рж╛рж╢рж┐
- рж╕рзВржЪржХ ржУ рж▓ржЧрж╛рж░рж┐ржжржо, рж╕ржорзАржХрж░ржг рж╕ржорж╛ржзрж╛ржи
- ржЬрзНржпрж╛ржорж┐рждрж┐: рж░рзЗржЦрж╛, ржХрзЛржг, рждрзНрж░рж┐ржнрзБржЬ, ржмрзГрждрзНржд, ржХрзНрж╖рзЗрждрзНрж░ржлрж▓
- рждрзНрж░рж┐ржХрзЛржгржорж┐рждрж┐, ржжрзВрж░рждрзНржм ржУ ржЙржЪрзНржЪрждрж╛, ржкрж░рж┐ржорж┐рждрж┐
- ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи ржУ ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗрж░ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи`;
      } else if (subject === 'higher_math') {
        return `ЁЯФ║ **ржЙржЪрзНржЪрждрж░ ржЧржгрж┐ржд (рзпржо-рззрзжржо рж╢рзНрж░рзЗржгрж┐) - SSC NCTB ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- рж╕рзЗржЯ ржУ ржлрж╛ржВрж╢ржи, ржмрзАржЬржЧрж╛ржгрж┐рждрж┐ржХ рж░рж╛рж╢рж┐, ржЬрзНржпрж╛ржорж┐рждрж┐ржХ ржЕржЩрзНржХржи
- рж╕ржорзАржХрж░ржг ржУ ржЕрж╕ржорждрж╛, ржЕрж╕рзАржо ржзрж╛рж░рж╛, рждрзНрж░рж┐ржХрзЛржгржорж┐рждрж┐
- рж╕рзВржЪржХрзАржпрж╝ ржУ рж▓ржЧрж╛рж░рж┐ржжржорзАржпрж╝ ржлрж╛ржВрж╢ржи, ржжрзНржмрж┐ржкржжрзА ржмрж┐рж╕рзНрждрзГрждрж┐
- рж╕рзНржерж╛ржирж╛ржЩрзНржХ ржЬрзНржпрж╛ржорж┐рждрж┐, рж╕ржорждрж▓рзАржпрж╝ ржнрзЗржХрзНржЯрж░, рждрзНрж░рж┐ржорж╛рждрзНрж░рж┐ржХ ржЬрзНржпрж╛ржорж┐рждрж┐
- ржЙржЪрзНржЪрждрж░ ржЧрж╛ржгрж┐рждрж┐ржХ ржЪрж┐ржирзНрждрж╛ржнрж╛ржмржирж╛ ржУ рж╕рзВрждрзНрж░рзЗрж░ ржкрзНрж░ржорж╛ржг`;
      }
    }
    // Class 11-12 curriculum instructions (HSC)
    else if (classLevel === '11-12' || classLevel === '11' || classLevel === '12') {
      if (subject === 'physics') {
        return `тЪб **ржкржжрж╛рж░рзНржержмрж┐ржЬрзНржЮрж╛ржи (ржПржХрж╛ржжрж╢-ржжрзНржмрж╛ржжрж╢ рж╢рзНрж░рзЗржгрж┐) - HSC NCTB ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- ржпржирзНрждрзНрж░ржмрж┐ржжрзНржпрж╛: ржЧрждрж┐ржмрж┐ржжрзНржпрж╛, рж╕рзНржерж┐рждрж┐ржмрж┐ржжрзНржпрж╛, ржХржорзНржкржи ржУ рждрж░ржЩрзНржЧ
- рждрж╛ржк ржУ ржарж╛рж░рзНржорзЛржбрж╛ржпрж╝ржирж╛ржорж┐ржХрзНрж╕: рждрж╛ржкрзАржпрж╝ ржзрж░рзНржо, ржЧрзНржпрж╛рж╕рзЗрж░ ржЖржЪрж░ржг
- ржЖрж▓рзЛржХржмрж┐ржжрзНржпрж╛: ржЬрзНржпрж╛ржорж┐рждрж┐ржХ ржЖрж▓рзЛржХржмрж┐ржжрзНржпрж╛, рждрж░ржЩрзНржЧ ржЖрж▓рзЛржХржмрж┐ржжрзНржпрж╛
- рждржбрж╝рж┐рзО ржУ ржЪрзБржорзНржмржХрждрзНржм: рждржбрж╝рж┐рзО ржХрзНрж╖рзЗрждрзНрж░, ржЪрзМржорзНржмржХ ржХрзНрж╖рзЗрждрзНрж░, ржкрзНрж░ржмрж╛рж╣
- ржЖржзрзБржирж┐ржХ ржкржжрж╛рж░рзНржержмрж┐ржжрзНржпрж╛: ржкрж╛рж░ржорж╛ржгржмрж┐ржХ ржкржжрж╛рж░рзНржержмрж┐ржжрзНржпрж╛, рждрзЗржЬрж╕рзНржХрзНрж░рж┐ржпрж╝рждрж╛`;
      } else if (subject === 'chemistry') {
        return `ЁЯзк **рж░рж╕рж╛ржпрж╝ржи (ржПржХрж╛ржжрж╢-ржжрзНржмрж╛ржжрж╢ рж╢рзНрж░рзЗржгрж┐) - HSC NCTB ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- ржкржжрж╛рж░рзНржерзЗрж░ ржЧржаржи: ржкрж░ржорж╛ржгрзБ, ржЕржгрзБ, рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржмржирзНржзржи
- ржкржжрж╛рж░рзНржерзЗрж░ ржЕржмрж╕рзНржерж╛: ржЧрзНржпрж╛рж╕, рждрж░рж▓, ржХржарж┐ржи ржкржжрж╛рж░рзНржерзЗрж░ ржзрж░рзНржо
- рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржмрж┐ржХрзНрж░рж┐ржпрж╝рж╛: ржЕржЬрзИржм рж░рж╕рж╛ржпрж╝ржи, ржЬрзИржм рж░рж╕рж╛ржпрж╝ржи
- рж╕ржорж╛ржзрж╛ржи рж░рж╕рж╛ржпрж╝ржи: ржжрзНрж░ржмржг, рждржбрж╝рж┐рзО ржмрж┐рж╢рзНрж▓рзЗрж╖ржг
- ржкрж░рж┐ржмрзЗрж╢ рж░рж╕рж╛ржпрж╝ржи: ржжрзВрж╖ржг, рж╕ржмрзБржЬ рж░рж╕рж╛ржпрж╝ржи`;
      } else if (subject === 'biology') {
        return `ЁЯзм **ржЬрзАржмржмрж┐ржЬрзНржЮрж╛ржи (ржПржХрж╛ржжрж╢-ржжрзНржмрж╛ржжрж╢ рж╢рзНрж░рзЗржгрж┐) - HSC NCTB ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- ржХрзЛрж╖ржмрж┐ржжрзНржпрж╛: ржХрзЛрж╖рзЗрж░ ржЧржаржи ржУ ржХрж╛рж░рзНржпрж╛ржмрж▓рзА, ржХрзЛрж╖ ржмрж┐ржнрж╛ржЬржи
- ржЯрж┐рж╕рзНржпрзБ ржУ ржЕржЩрзНржЧрждржирзНрждрзНрж░: ржЙржжрзНржнрж┐ржж ржУ ржкрзНрж░рж╛ржгрзАрж░ ржЯрж┐рж╕рзНржпрзБ
- рж╢рзНржмрж╕ржи ржУ рж╕рж╛рж▓рзЛржХрж╕ржВрж╢рзНрж▓рзЗрж╖ржг: рж╢ржХрзНрждрж┐ рж░рзВржкрж╛ржирзНрждрж░ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛
- ржмржВрж╢ржЧрждрж┐ ржУ ржмрж┐ржмрж░рзНрждржи: DNA, RNA, ржмржВрж╢ржЧрждрж┐рж░ рж╕рзВрждрзНрж░
- ржЬрзАржм ржкрзНрж░ржпрзБржХрзНрждрж┐: ржЬрзЗржирзЗржЯрж┐ржХ ржЗржЮрзНржЬрж┐ржирж┐ржпрж╝рж╛рж░рж┐ржВ, ржмрж╛ржпрж╝рзЛржЯрзЗржХржирзЛрж▓ржЬрж┐`;
      } else if (subject === 'higher_math') {
        return `ЁЯУР **ржЙржЪрзНржЪрждрж░ ржЧржгрж┐ржд (ржПржХрж╛ржжрж╢-ржжрзНржмрж╛ржжрж╢ рж╢рзНрж░рзЗржгрж┐) - HSC NCTB ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- ржорзНржпрж╛ржЯрзНрж░рж┐ржХрзНрж╕ ржУ ржирж┐рж░рзНржгрж╛ржпрж╝ржХ: ржорзНржпрж╛ржЯрзНрж░рж┐ржХрзНрж╕ ржмрзАржЬржЧржгрж┐ржд, рж╕ржорзАржХрж░ржг рж╕ржорж╛ржзрж╛ржи
- ржнрзЗржХрзНржЯрж░: ржжрзНржмрж┐ржорж╛рждрзНрж░рж┐ржХ ржУ рждрзНрж░рж┐ржорж╛рждрзНрж░рж┐ржХ ржнрзЗржХрзНржЯрж░, ржнрзЗржХрзНржЯрж░ ржмрзАржЬржЧржгрж┐ржд
- ржЬржЯрж┐рж▓ рж╕ржВржЦрзНржпрж╛: ржЬржЯрж┐рж▓ рж╕ржорждрж▓, ржзрзНрж░рзБржмржХ ржУ ржЪрж▓
- ржХрзНржпрж╛рж▓ржХрзБрж▓рж╛рж╕: ржЕржирзНрждрж░рзАржХрж░ржг, рж╕ржорж╛ржХрж▓ржи, ржкрзНрж░ржпрж╝рзЛржЧ
- рж╕ржорзНржнрж╛ржмрзНржпрждрж╛ ржУ ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи: ржмрж┐рждрж░ржг, ржкрж░рзАржХрзНрж╖ржг`;
      }
    }
    
    // Default fallback
    return `ЁЯУЪ **${subject} ржмрж┐рж╖ржпрж╝ржХ ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- NCTB ржХрж╛рж░рж┐ржХрзБрж▓рж╛ржо ржЕржирзБрж╕рж░ржг ржХрж░рзБржи
- ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ ржкрзНрж░рзЗржХрзНрж╖рж╛ржкржЯрзЗ ржЙржжрж╛рж╣рж░ржг ржжрж┐ржи
- ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ рж╕ржорж╛ржзрж╛ржи ржкрзНрж░ржжрж╛ржи ржХрж░рзБржи`;
  }

  // Generate questions with enhanced Bangladeshi context and 5-key rotation
  async generateQuestions(
    subject: string,
    classLevel: string,
    chapter: string,
    questionType: string,
    questionCategory: string,
    difficulty: string,
    count: number,
    userId: string,
    userRole: 'teacher' | 'student'
  ): Promise<any> {
    
    // Check if at least one key is configured
    if (!this.getCurrentKey()) {
      throw new Error('PraggoAI API Keys ржХржиржлрж┐ржЧрж╛рж░ ржХрж░рж╛ рж╣ржпрж╝ржирж┐ред API_KEYS array-рждрзЗ valid keys ржпрзЛржЧ ржХрж░рзБржиред');
    }

    // Get Bangla subject name with proper classification
    let subjectBangla = '';
    if (classLevel === '6' || classLevel === '7' || classLevel === '8') {
      subjectBangla = subject === 'science' ? 'ржмрж┐ржЬрзНржЮрж╛ржи ржЕржирзБрж╕ржирзНржзрж╛ржирзА ржкрж╛ржа' : 'ржЧржгрж┐ржд';
    } else if (classLevel === '9-10') {
      if (subject === 'general_math') {
        subjectBangla = 'рж╕рж╛ржзрж╛рж░ржг ржЧржгрж┐ржд';
      } else if (subject === 'higher_math') {
        subjectBangla = 'ржЙржЪрзНржЪрждрж░ ржЧржгрж┐ржд';
      } else {
        subjectBangla = 'ржмрж┐ржЬрзНржЮрж╛ржи';
      }
    }
    
    // Get class level in Bangla
    let classLevelBangla = '';
    switch (classLevel) {
      case '6': classLevelBangla = 'рж╖рж╖рзНржа рж╢рзНрж░рзЗржгрж┐'; break;
      case '7': classLevelBangla = 'рж╕ржкрзНрждржо рж╢рзНрж░рзЗржгрж┐'; break;
      case '8': classLevelBangla = 'ржЕрж╖рзНржЯржо рж╢рзНрж░рзЗржгрж┐'; break;
      case '9-10': classLevelBangla = 'ржиржмржо-ржжрж╢ржо рж╢рзНрж░рзЗржгрж┐'; break;
      default: classLevelBangla = classLevel;
    }
    
    let difficultyLevels = '';
    if (difficulty === 'mixed') {
      difficultyLevels = 'рж╕рж╣ржЬ, ржоржзрзНржпржо ржУ ржЬржЯрж┐рж▓ рж╕рзНрждрж░рзЗрж░ ржорж┐рж╢рзНрж░ржг';
    } else if (difficulty === 'easy') {
      difficultyLevels = 'рж╕рж╣ржЬ рж╕рзНрждрж░рзЗрж░';
    } else if (difficulty === 'medium') {
      difficultyLevels = 'ржоржзрзНржпржо рж╕рзНрждрж░рзЗрж░';
    } else {
      difficultyLevels = 'ржЬржЯрж┐рж▓ рж╕рзНрждрж░рзЗрж░';
    }

    // Get question category description
    let questionCategoryDescription = '';
    if (questionCategory === 'math-based') {
      questionCategoryDescription = 'ржЧржгрж┐ржд ржнрж┐рждрзНрждрж┐ржХ ржкрзНрж░рж╢рзНржи - ржЧржгржирж╛, рж╕рзВрждрзНрж░ ржкрзНрж░ржпрж╝рзЛржЧ, рж╕ржВржЦрзНржпрж╛ржЧржд рж╕ржорж╕рзНржпрж╛';
    } else if (questionCategory === 'theory-based') {
      questionCategoryDescription = 'рждрждрзНрждрзНржм ржнрж┐рждрзНрждрж┐ржХ ржкрзНрж░рж╢рзНржи - ржзрж╛рж░ржгрж╛, рж╕ржВржЬрзНржЮрж╛, ржмрзНржпрж╛ржЦрзНржпрж╛, рждрзБрж▓ржирж╛';
    } else {
      questionCategoryDescription = 'ржорж┐рж╢рзНрж░ ржкрзНрж░рж╢рзНржи - ржЧржгрж┐ржд ржУ рждрждрзНрждрзНржм ржЙржнржпрж╝ ржзрж░ржирзЗрж░';
    }

    // Enhanced Bangladeshi context prompt with NCTB curriculum
    const curriculumInstructions = this.getCurriculumSpecificInstructions(classLevel, subject);
    
  const prompt = `ржЖржкржирж┐ "Praggo AI" - ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ NCTB ржнрж┐рждрзНрждрж┐ржХ рж╕рзНржорж╛рж░рзНржЯ рж╢рж┐ржХрзНрж╖рж╛ рж╕рж╣рж╛ржпрж╝ржХред

ЁЯПЖ Science & Math Care ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржорзЗрж░ ржЬржирзНржп ${count}ржЯрж┐ ${difficultyLevels} ${subjectBangla} ржкрзНрж░рж╢рзНржи рждрзИрж░рж┐ ржХрж░рзБржиред

ЁЯОп **BANGLADESH NCTB CURRICULUM FOCUS**
ржЖржкржирж┐ ржПржХржЬржи рззрзл+ ржмржЫрж░рзЗрж░ ржЕржнрж┐ржЬрзНржЮ ${subjectBangla} ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ рж╢рж┐ржХрзНрж╖ржХ ржпрж┐ржирж┐ NCTB ржХрж╛рж░рж┐ржХрзБрж▓рж╛ржо ржПржмржВ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ рж╢рж┐ржХрзНрж╖рж╛ржмрзНржпржмрж╕рзНржерж╛ржпрж╝ ржжржХрзНрж╖ред

ЁЯУЪ ржкрзНрж░рж╢рзНржирзЗрж░ ржмрж┐ржмрж░ржг:
- ржмрж┐рж╖ржпрж╝: ${subjectBangla} (${subject})
- рж╢рзНрж░рзЗржгрж┐: ${classLevelBangla}
- ржЕржзрзНржпрж╛ржпрж╝/ржЯржкрж┐ржХ: ${chapter}
- ржкрзНрж░рж╢рзНржирзЗрж░ ржзрж░ржи: ${questionType}
- ржкрзНрж░рж╢рзНржирзЗрж░ ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ: ${questionCategoryDescription}
- ржХржарж┐ржирждрж╛рж░ рж╕рзНрждрж░: ${difficultyLevels}

ЁЯЗзЁЯЗй NCTB ржХрж╛рж░рж┐ржХрзБрж▓рж╛ржо ржУ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ ржмрж╛рж╕рзНрждржм рж╢рж┐ржХрзНрж╖рж╛ржмрзНржпржмрж╕рзНржерж╛ ржЕржирзБржпрж╛ржпрж╝рзА:

${curriculumInstructions}

${(classLevel === '6' || classLevel === '7') ? `
ЁЯЪи **CRITICAL SYLLABUS COMPLIANCE FOR CLASS ${classLevel}:**
- ржкрзНрж░рж╢рзНржи рждрзИрж░рж┐рж░ ржЖржЧрзЗ ржЕржмрж╢рзНржпржЗ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржи ржпрзЗ рж╕ржорж╕рзНржд ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ ${classLevel === '6' ? 'рж╖рж╖рзНржа' : 'рж╕ржкрзНрждржо'} рж╢рзНрж░рзЗржгрж┐рж░ NCTB ржХрж╛рж░рж┐ржХрзБрж▓рж╛ржорзЗрж░ ржЕржирзНрждрж░рзНржнрзБржХрзНржд
- ржЙржкрж░рзЗ ржЙрж▓рзНрж▓рзЗржЦрж┐ржд ржирж┐рж╖рж┐ржжрзНржз ржмрж┐рж╖ржпрж╝ржЧрзБрж▓рзЛ ржХрзЛржирзЛржнрж╛ржмрзЗржЗ ржкрзНрж░рж╢рзНржирзЗ ржЖржиржмрзЗржи ржирж╛
- ржкрзНрж░рждрж┐ржЯрж┐ ржкрзНрж░рж╢рзНржи рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржмржпрж╝рж╕ ржУ ржЬрзНржЮрж╛ржирзЗрж░ рж╕рзНрждрж░ ржЕржирзБржпрж╛ржпрж╝рзА рж╣рждрзЗ рж╣ржмрзЗ
- ржЬржЯрж┐рж▓ ржзрж╛рж░ржгрж╛ ржПржбрж╝рж┐ржпрж╝рзЗ рж╕рж╣ржЬ ржУ ржмрзЛржзржЧржорзНржп ржнрж╛рж╖рж╛ржпрж╝ ржкрзНрж░рж╢рзНржи рждрзИрж░рж┐ ржХрж░рзБржи
- рж╢рзБржзрзБржорж╛рждрзНрж░ ${classLevel === '6' ? 'рж╖рж╖рзНржа' : 'рж╕ржкрзНрждржо'} рж╢рзНрж░рзЗржгрж┐рж░ ржкрж╛ржарзНржпржмржЗржпрж╝рзЗ ржерж╛ржХрж╛ ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи` : ''}

ЁЯОп **ржЙрждрзНрждрж░рзЗ ржЕржмрж╢рзНржпржЗ ржпрж╛ ржерж╛ржХрждрзЗ рж╣ржмрзЗ:**
- рж╕ржарж┐ржХ ржЙрждрзНрждрж░рзЗрж░ рж╕ржорзНржкрзВрж░рзНржг ржмрзНржпрж╛ржЦрзНржпрж╛ ржУ ржпрзБржХрзНрждрж┐
- ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ рж╕ржорж╛ржзрж╛ржи ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ (ржЧржгрж┐ржд/ржмрж┐ржЬрзНржЮрж╛ржирзЗрж░ ржЬржирзНржп)
- ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗрж░ рж╕рж╛ржерзЗ рж╕ржорзНржкрж░рзНржХ ржмрж╛ ржкрзНрж░ржпрж╝рзЛржЧ
- рж╕рж╛ржзрж╛рж░ржг ржнрзБрж▓ ржУ рж╕рзЗржЧрзБрж▓рзЛ ржПржбрж╝рж╛ржирзЛрж░ ржЙржкрж╛ржпрж╝
- ржЕрждрж┐рж░рж┐ржХрзНржд ржЯрж┐ржкрж╕ ржУ ржоржирзЗ рж░рж╛ржЦрж╛рж░ ржХрзМрж╢рж▓

${questionCategory === 'math-based' ? `ЁЯзо **ржЧржгрж┐ржд ржнрж┐рждрзНрждрж┐ржХ ржкрзНрж░рж╢рзНржи рждрзИрж░рж┐рж░ ржмрж┐рж╢рзЗрж╖ ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- рж╕рзВрждрзНрж░ ржкрзНрж░ржпрж╝рзЛржЧ ржнрж┐рждрзНрждрж┐ржХ ржкрзНрж░рж╢рзНржи рждрзИрж░рж┐ ржХрж░рзБржи
- рж╕ржВржЦрзНржпрж╛ржЧржд ржЧржгржирж╛ ржУ рж╣рж┐рж╕рж╛ржм-ржирж┐ржХрж╛рж╢ ржЕржирзНрждрж░рзНржнрзБржХрзНржд ржХрж░рзБржи
- ржорж╛ржи ржирж┐рж░рзНржгржпрж╝, ржкрж░рж┐ржорж╛ржг ржЧржгржирж╛, рж╢рждржХрж░рж╛ рж╣рж┐рж╕рж╛ржм
- ржЧрзНрж░рж╛ржл, ржЪрж╛рж░рзНржЯ, ржЯрзЗржмрж┐рж▓ ржерзЗржХрзЗ рждржерзНржп ржмрж┐рж╢рзНрж▓рзЗрж╖ржг
- ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗрж░ ржбрзЗржЯрж╛ ржжрж┐ржпрж╝рзЗ ржЧрж╛ржгрж┐рждрж┐ржХ рж╕ржорж╕рзНржпрж╛
- ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ рж╕ржорж╛ржзрж╛ржиржпрзЛржЧрзНржп ржЧржгржирж╛ржорзВрж▓ржХ ржкрзНрж░рж╢рзНржи` : questionCategory === 'theory-based' ? `ЁЯУЦ **рждрждрзНрждрзНржм ржнрж┐рждрзНрждрж┐ржХ ржкрзНрж░рж╢рзНржи рждрзИрж░рж┐рж░ ржмрж┐рж╢рзЗрж╖ ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- ржзрж╛рж░ржгрж╛, рж╕ржВржЬрзНржЮрж╛, ржмрзНржпрж╛ржЦрзНржпрж╛ ржнрж┐рждрзНрждрж┐ржХ ржкрзНрж░рж╢рзНржи
- рждрзБрж▓ржирж╛ржорзВрж▓ржХ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржУ ржкрж╛рж░рзНржержХрзНржп
- ржХрж╛рж░ржг-ржлрж▓рж╛ржлрж▓ рж╕ржорзНржкрж░рзНржХ ржмрзНржпрж╛ржЦрзНржпрж╛
- ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ ржмрж░рзНржгржирж╛ ржУ ржХрзНрж░ржоржзрж╛рж░рж╛
- ржмрзИрж╢рж┐рж╖рзНржЯрзНржп, ржЧрзБржгрж╛ржмрж▓рзА ржУ ржкрзНрж░ржпрж╝рзЛржЧ ржмрж░рзНржгржирж╛
- рждрж╛рждрзНрждрзНржмрж┐ржХ ржЬрзНржЮрж╛ржи ржУ ржмрзЛржЭрж╛ржкржбрж╝рж╛ ржкрж░рзАржХрзНрж╖рж╛` : `ЁЯФД **ржорж┐рж╢рзНрж░ ржкрзНрж░рж╢рзНржи рждрзИрж░рж┐рж░ ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
- ржЧржгрж┐ржд ржУ рждрждрзНрждрзНржм ржЙржнржпрж╝ ржзрж░ржирзЗрж░ ржкрзНрж░рж╢рзНржи рждрзИрж░рж┐ ржХрж░рзБржи
- ржХрж┐ржЫрзБ ржкрзНрж░рж╢рзНржирзЗ ржЧржгржирж╛ ржУ ржХрж┐ржЫрзБрждрзЗ ржзрж╛рж░ржгрж╛ ржерж╛ржХржмрзЗ
- рждрж╛рждрзНрждрзНржмрж┐ржХ ржЬрзНржЮрж╛ржирзЗрж░ рж╕рж╛ржерзЗ ржмрзНржпржмрж╣рж╛рж░рж┐ржХ ржкрзНрж░ржпрж╝рзЛржЧ
- рж╕рзВрждрзНрж░ ржмрзНржпрж╛ржЦрзНржпрж╛ ржПржмржВ рждрж╛рж░ ржкрзНрж░ржпрж╝рзЛржЧ ржЙржнржпрж╝ржЗ`}

${subject === 'science' ? `ЁЯФм ржмрж┐ржЬрзНржЮрж╛ржи (ржлрж┐ржЬрж┐ржХрзНрж╕ + ржХрзЗржорж┐рж╕рзНржЯрзНрж░рж┐ + ржмрж╛ржпрж╝рзЛрж▓ржЬрж┐ ржнрж┐рждрзНрждрж┐ржХ) ржирж┐рж░рзНржжрзЗрж╢ржирж╛:
- ржкржжрж╛рж░рзНрже, рж╢ржХрзНрждрж┐, ржЬрзАржмржмрж┐ржЬрзНржЮрж╛ржи ржУ ржкрж░рж┐ржмрзЗрж╢рзЗрж░ рж╕ржоржирзНржмржпрж╝
- ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗрж░ ржЙржжрж╛рж╣рж░ржг (ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ ржХрзЗржирзНржжрзНрж░рж┐ржХ: ржХрзГрж╖рж┐, ржЬрж▓ржмрж╛ржпрж╝рзБ, рж╕рзНржмрж╛рж╕рзНржерзНржп)
- ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ ржХрзНрж╖рзЗрждрзНрж░рзЗ рж╕рзВрждрзНрж░, рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ рж╕ржорзАржХрж░ржг, ржЪрж┐рждрзНрж░ ржмрж░рзНржгржирж╛ ржЯрзЗржХрзНрж╕ржЯрзЗ
- ржПрж╕ржПрж╕рж╕рж┐ / ржПржЗржЪржПрж╕рж╕рж┐ ржмрзЛрж░рзНржб ржкрзНрж░рж╢рзНржирзЗрж░ рж╕рзНржЯрж╛ржЗрж▓ ржЕржирзБрж╕рж░ржг
- ржмрж┐ржнрзНрж░рж╛ржирзНрждрж┐ржХрж░ ржЕржкрж╢ржи (MCQ) рждрзИрж░рж┐ ржХрж░рзБржи` : `тЮЧ ржЧржгрж┐рждрзЗрж░ ржЬржирзНржп ржирж┐рж░рзНржжрзЗрж╢ржирж╛:
- ржорзМрж▓рж┐ржХ ржерзЗржХрзЗ ржЙржЪрзНржЪрждрж░ ржзрж╛рж░ржгрж╛ (ржЕрзНржпрж╛рж▓ржЬрзЗржмрзНрж░рж╛, ржЬрзНржпрж╛ржорж┐рждрж┐, рждрзНрж░рж┐ржХрзЛржгржорж┐рждрж┐, ржХрзНржпрж╛рж▓ржХрзБрж▓рж╛рж╕ - рж╢рзНрж░рзЗржгрж┐ ржЕржирзБржпрж╛ржпрж╝рзА)
- ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ рж╕ржорж╛ржзрж╛ржи (Step-by-step solution)
- рж╕рзВрждрзНрж░рзЗрж░ ржмрзНржпржмрж╣рж╛рж░ ржУ рж░рзВржкрж╛ржирзНрждрж░
- ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗрж░ ржкрзНрж░рзЯрзЛржЧ (ржЖрж░рзНржерж┐ржХ ржЧржгрж┐ржд, ржЬрзНржпрж╛ржорж┐рждрж┐ржХ ржкрж░рж┐ржорж╛ржк, рждржерзНржп ржмрж┐рж╢рзНрж▓рзЗрж╖ржг)
- ржХржарж┐ржи ржкрзНрж░рж╢рзНржирзЗ ржЗржЩрзНржЧрж┐ржд (hint) рж╕ржВржпрзБржХрзНржд ржХрж░рзБржи`}

ЁЯУЛ JSON ржлрж░ржорзНржпрж╛ржЯ (ржмрж╛ржВрж▓рж╛ржпрж╝ ржЙрждрзНрждрж░ ржУ ржмрзНржпрж╛ржЦрзНржпрж╛):
${questionType === 'mcq' ? 'MCQ ржлрж░ржорзНржпрж╛ржЯ:' : questionType === 'cq' ? 'CQ ржлрж░ржорзНржпрж╛ржЯ:' : 'рж╕рзГржЬржирж╢рзАрж▓ ржкрзНрж░рж╢рзНржи ржлрж░ржорзНржпрж╛ржЯ:'}

тЪая╕П **ржкрзНрж░рждрж┐ржЯрж┐ ржкрзНрж░рж╢рзНржирзЗрж░ ржЙрждрзНрждрж░рзЗ ржЕржмрж╢рзНржпржЗ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржмрзНржпрж╛ржЦрзНржпрж╛ ржерж╛ржХрждрзЗ рж╣ржмрзЗ:**
- рж╕ржарж┐ржХ ржЙрждрзНрждрж░ ржХрзЗржи рж╕ржарж┐ржХ рждрж╛рж░ ржХрж╛рж░ржг
- ржнрзБрж▓ ржЕржкрж╢ржиржЧрзБрж▓рзЛ ржХрзЗржи ржнрзБрж▓ (MCQ ржПрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ)
- рж╕рзВрждрзНрж░ ржкрзНрж░ржпрж╝рзЛржЧрзЗрж░ ржзрж╛ржкрж╕ржорзВрж╣ (ржЧржгрж┐ржд/ржмрж┐ржЬрзНржЮрж╛ржирзЗрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ)
- ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗрж░ рж╕рж╛ржерзЗ рж╕ржорзНржкрж░рзНржХ
- ржЕрждрж┐рж░рж┐ржХрзНржд ржЯрж┐ржкрж╕ ржУ рж╕рждрж░рзНржХрждрж╛

ЁЯОп **CRITICAL EXPLANATION REQUIREMENTS:**
${questionCategory === 'math-based' || subject === 'math' || subject === 'general_math' || subject === 'higher_math' ? `
ЁЯУК **ржЧржгрж┐ржд ржкрзНрж░рж╢рзНржирзЗрж░ ржЬржирзНржп MANDATORY SOLVE SECTION:**
- "рж╕ржорж╛ржзрж╛ржи:" ржжрж┐ржпрж╝рзЗ рж╢рзБрж░рзБ ржХрж░рзБржи
- ржзрж╛ржк рзз, ржзрж╛ржк рзи, ржзрж╛ржк рзй... ржПржнрж╛ржмрзЗ рж╕ржорж╛ржзрж╛ржи рж▓рж┐ржЦрзБржи
- ржкрзНрж░рждрж┐ржЯрж┐ ржзрж╛ржкрзЗ ржХрзЛржи рж╕рзВрждрзНрж░/ржирж┐ржпрж╝ржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рж▓рзЛ рждрж╛ рж╕рзНржкрж╖рзНржЯ ржХрж░рзБржи
- ржЧржгржирж╛рж░ ржкрзНрж░рждрж┐ржЯрж┐ ржкржжржХрзНрж╖рзЗржк ржжрзЗржЦрж╛ржи
- рж╢рзЗрж╖рзЗ "тИ┤ ржЙрждрзНрждрж░: [ржлрж▓рж╛ржлрж▓]" рж▓рж┐ржЦрзБржи` : `
ЁЯФм **ржмрж┐ржЬрзНржЮрж╛ржи ржкрзНрж░рж╢рзНржирзЗрж░ ржЬржирзНржп MANDATORY EXPLANATION:**
- "ржмрзНржпрж╛ржЦрзНржпрж╛:" ржжрж┐ржпрж╝рзЗ рж╢рзБрж░рзБ ржХрж░рзБржи
- ржмрзИржЬрзНржЮрж╛ржирж┐ржХ ржзрж╛рж░ржгрж╛ ржУ ржирзАрждрж┐ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рзБржи
- ржкрзНрж░ржпрж╝рзЛржЬржирзЗ рж╕рзВрждрзНрж░, ржмрж┐ржХрзНрж░рж┐ржпрж╝рж╛ ржмрж╛ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ ржмрж░рзНржгржирж╛ ржХрж░рзБржи
- ржХрзЗржи ржЕржирзНржп ржЕржкрж╢ржиржЧрзБрж▓рзЛ ржнрзБрж▓ рждрж╛ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рзБржи`}

[{"questionText": "ржмрж╛ржВрж▓рж╛ржпрж╝ ржкрзНрж░рж╢рзНржи", "questionType": "${questionType}", ${questionType === 'mcq' ? '"options": ["ржХ) ...", "ржЦ) ...", "ржЧ) ...", "ржШ) ..."], "correctAnswer": "ржХ) ...",' : '"options": null, "correctAnswer": null,'} "answer": "рж╕ржарж┐ржХ ржЙрждрзНрждрж░: [ржЙрждрзНрждрж░]\\n\\n${questionCategory === 'math-based' || subject === 'math' || subject === 'general_math' || subject === 'higher_math' ? 'рж╕ржорж╛ржзрж╛ржи:\\nржзрж╛ржк рзз: [ржкрзНрж░ржержо ржзрж╛ржк]\\nржзрж╛ржк рзи: [ржжрзНржмрж┐рждрзАржпрж╝ ржзрж╛ржк]\\n...\\nтИ┤ ржЙрждрзНрждрж░: [ржлрж▓рж╛ржлрж▓]' : 'ржмрзНржпрж╛ржЦрзНржпрж╛: [ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржмрзИржЬрзНржЮрж╛ржирж┐ржХ ржмрзНржпрж╛ржЦрзНржпрж╛]'}\\n\\nржнрзБрж▓ ржЕржкрж╢ржиржЧрзБрж▓рзЛрж░ ржмрзНржпрж╛ржЦрзНржпрж╛: [ржХрзЗржи ржЕржирзНржпржЧрзБрж▓рзЛ ржнрзБрж▓]\\nржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗрж░ рж╕рж╛ржерзЗ рж╕ржорзНржкрж░рзНржХ: [ржкрзНрж░рж╛ржпрж╝рзЛржЧрж┐ржХ ржЙржжрж╛рж╣рж░ржг]\\nржЕрждрж┐рж░рж┐ржХрзНржд ржЯрж┐ржкрж╕: [ржоржирзЗ рж░рж╛ржЦрж╛рж░ ржХрзМрж╢рж▓ ржУ рж╕рждрж░рзНржХрждрж╛]", "marks": ${questionType === 'creative' ? '10' : questionType === 'cq' ? '2' : '1'}}]`;

    try {
        const content = await this.makeAPICall(
        prompt, userId, userRole, 'generate_questions', subject as 'science' | 'math'
      );
      
      console.log("Praggo AI response for Bangladesh questions:", content);
      
      // Parse JSON response
      let jsonMatch = content.match(/\[[\s\S]*\]/);
      
      if (!jsonMatch) {
        jsonMatch = content.match(/```json\n?([\s\S]*?)\n?```/);
        if (jsonMatch) {
          jsonMatch = [jsonMatch[1]];
        }
      }
      
      if (jsonMatch) {
        try {
          return JSON.parse(jsonMatch[0]);
        } catch (parseError) {
          console.error('JSON parsing failed:', parseError);
          throw new Error('Praggo AI ржерзЗржХрзЗ рж╕ржарж┐ржХ ржлрж░ржорзНржпрж╛ржЯрзЗ ржЙрждрзНрждрж░ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред');
        }
      } else {
        throw new Error('Praggo AI ржерзЗржХрзЗ JSON ржлрж░ржорзНржпрж╛ржЯрзЗ ржЙрждрзНрждрж░ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред');
      }
      
    } catch (error: any) {
      console.error('Praggo AI question generation error:', error);
      throw error;
    }
  }

  // Solve student doubts with NCTB context and 5-key rotation
  async solveDoubt(
    question: string,
    subject: string,
    userId: string,
    userRole: 'student'
  ): Promise<string> {
    
    if (!this.getCurrentKey()) {
      return `ЁЯдЦ Praggo AI рж╕ржорж╛ржзрж╛ржи (ржХрзА ржирзЗржЗ)\n\nржЖржкржирж╛рж░ ${subject === 'science' ? 'ржмрж┐ржЬрзНржЮрж╛ржи' : 'ржЧржгрж┐ржд'} ржкрзНрж░рж╢рзНржи: "${question}"\n\nAPI keys ржХржиржлрж┐ржЧрж╛рж░ ржХрж░рж╛ рж╣ржпрж╝ржирж┐ред`;
    }

    const subjectBangla = subject === 'science' ? 'ржмрж┐ржЬрзНржЮрж╛ржи' : 'ржЧржгрж┐ржд';

    const prompt = `ржЖржкржирж┐ "Praggo AI" - ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ рж╢рж┐ржХрзНрж╖рж╛рж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ рждрзИрж░рж┐ ржПржХржЯрж┐ AI рж╢рж┐ржХрзНрж╖рж╛ рж╕рж╣рж╛ржпрж╝ржХред

ЁЯОУ Science & Math Care ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржорзЗрж░ ржПржХржЬржи ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ ${subjectBangla} рж╢рж┐ржХрзНрж╖ржХ рж╣рж┐рж╕рзЗржмрзЗ ржЙрждрзНрждрж░ ржжрж┐ржиред

ЁЯУЭ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржкрзНрж░рж╢рзНржи: ${question}

ЁЯЗзЁЯЗй **ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ рж╕рж░рзНржмрзЛржЪрзНржЪ ржорж╛ржирзЗрж░ рж╢рж┐ржХрзНрж╖рж╛ ржмрзНржпржмрж╕рзНржерж╛ ржЕржирзБржпрж╛ржпрж╝рзА** ржПржХржЯрж┐ ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ ржорж╛ржирзЗрж░ рж╕ржорж╛ржзрж╛ржи ржкрзНрж░ржжрж╛ржи ржХрж░рзБржи:

ЁЯУЦ NCTB ржХрж╛рж░рж┐ржХрзБрж▓рж╛ржо рзирзжрзирзл ржЕржирзБржпрж╛ржпрж╝рзА рж╕рж░рзНржмрж╢рзЗрж╖ ржЖржкржбрзЗржЯ
ЁЯПЖ ржврж╛ржмрж┐/ржмрзБржпрж╝рзЗржЯ/ржорзЗржбрж┐ржХрзЗрж▓ ржнрж░рзНрждрж┐ ржкрж░рзАржХрзНрж╖рж╛рж░ ржорж╛ржи ржмржЬрж╛ржпрж╝ рж░рзЗржЦрзЗ
ЁЯОп ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ рж╕рж╛ржВрж╕рзНржХрзГрждрж┐ржХ ржУ ржнрзМржЧрзЛрж▓рж┐ржХ ржкрзНрж░рзЗржХрзНрж╖рж╛ржкржЯрзЗ рж╕ржорж╛ржзрж╛ржи

${subject === 'science' ? `ЁЯФм ржмрж┐ржЬрзНржЮрж╛ржи рж╕ржорж╛ржзрж╛ржирзЗрж░ ржЬржирзНржп:
- ржзрж╛рж░ржгрж╛ ржмрзНржпрж╛ржЦрзНржпрж╛ тЖТ рж╕рзВрждрзНрж░/ржирж┐ржпрж╝ржо тЖТ ржкрзНрж░ржпрж╝рзЛржЧ
- ржкрзНрж░ржпрж╝рзЛржЬржирзЗ рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржмрж┐ржХрзНрж░рж┐ржпрж╝рж╛, ржЬрзИржм ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛, ржкржжрж╛рж░рзНржержмрж┐ржЬрзНржЮрж╛ржирзЗрж░ рж╕рзВрждрзНрж░
- ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ ржкрзНрж░рзЗржХрзНрж╖рж╛ржкржЯрзЗ ржЙржжрж╛рж╣рж░ржг ржжрж┐ржи
- ржЕрждрж┐рж░рж┐ржХрзНржд ржЕржирзБрж╢рзАрж▓ржирзЗрж░ ржЬржирзНржп рзз-рзиржЯрж┐ ржЫрзЛржЯ ржкрзНрж░рж╢рзНржи ржкрзНрж░рж╕рзНрждрж╛ржм ржХрж░рзБржи` : `тЮЧ ржЧржгрж┐ржд рж╕ржорж╛ржзрж╛ржирзЗрж░ ржЬржирзНржп:
- ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ (Step-by-step) ржмрзНржпрж╛ржЦрзНржпрж╛
- ржХрзЛржерж╛ржпрж╝ ржХрзЛржи рж╕рзВрждрзНрж░ ржмрзНржпржмрж╣рзГржд рж╣рж▓рзЛ рждрж╛ ржЙрж▓рзНрж▓рзЗржЦ
- ржмрж┐ржХрж▓рзНржк ржкржжрзНржзрждрж┐ ржерж╛ржХрж▓рзЗ рж╕ржВржХрзНрж╖рзЗржкрзЗ ржмрж▓рзБржи
- рж╕рж╛ржзрж╛рж░ржг ржнрзБрж▓ (Common mistakes) ржЙрж▓рзНрж▓рзЗржЦ ржХрж░рзБржи
- рж╢рзЗрж╖рзЗ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржкрзБржирж░рж╛рж▓рзЛржЪржирж╛ ржжрж┐ржи`}

тЬи ржЙрждрзНрждрж░ржЯрж┐ ржЕржмрж╢рзНржпржЗ:
- рж╕рж╣ржЬ ржУ ржмрзЛржзржЧржорзНржп ржмрж╛ржВрж▓рж╛ржпрж╝ рж▓рж┐ржЦрзБржи
- ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рзБржи (Why & How)
- ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржжрзЗрж░ ржЬржирзНржп ржкрзНрж░рж╛рж╕ржЩрзНржЧрж┐ржХ ржЙржжрж╛рж╣рж░ржг ржжрж┐ржи
- ржЙрзОрж╕рж╛рж╣ржорзВрж▓ржХ ржУ рж╢рж┐ржХрзНрж╖ржгрзАржпрж╝ ржЯрзЛржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи
- рж╕рзВрждрзНрж░ ржмрж╛ ржирж┐ржпрж╝ржо ржкрзНрж░ржпрж╝рзЛржЧрзЗрж░ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ рж╕рзНржкрж╖рзНржЯ ржХрж░рзБржи
- рж╕рж╛ржзрж╛рж░ржг ржнрзБрж▓рждрзНрж░рзБржЯрж┐ ржУ ржПржбрж╝рж╛ржирзЛрж░ ржЙржкрж╛ржпрж╝ ржЙрж▓рзНрж▓рзЗржЦ ржХрж░рзБржи

ЁЯОп Praggo AI рж╕ржорж╛ржзрж╛ржи:`;

    try {
      const result = await this.makeAPICall(
        prompt, userId, userRole, 'solve_doubt', subject as 'science' | 'math'
      );
      
      return result;
    } catch (error: any) {
      console.error('Praggo AI doubt solving error:', error);
      return `ЁЯдЦ Praggo AI рж╕ржорж╛ржзрж╛ржи (рждрзНрж░рзБржЯрж┐)\n\nржЖржкржирж╛рж░ ${subjectBangla} ржкрзНрж░рж╢рзНржи: "${question}"\n\nтЭМ ${error.message}\n\nржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржХрж┐ржЫрзБржХрзНрж╖ржг ржкрж░ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи ржмрж╛ рж╢рж┐ржХрзНрж╖ржХрзЗрж░ рж╕рж╛рж╣рж╛ржпрзНржп ржирж┐ржиред`;
    }
  }

  // Get API usage statistics
  async getUsageStats(userId: string): Promise<any> {
    // Usage stats disabled without database
    return {
      todayUsage: 0,
      successfulCalls: 0,
      failedCalls: 0,
      questionsGenerated: 0,
      doubtsResolved: 0,
      trackingDisabled: true
    };
  }
}

// Export singleton instance
export const praggoAI = PraggoAIService.getInstance();